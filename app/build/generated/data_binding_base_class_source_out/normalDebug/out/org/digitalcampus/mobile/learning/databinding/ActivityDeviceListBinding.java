// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class ActivityDeviceListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonScan;

  @NonNull
  public final TextView newDevicesTitle;

  @NonNull
  public final TextView pairedDevicesTitle;

  @NonNull
  public final ProgressBar progressBar4;

  @NonNull
  public final RecyclerView recyclerNewDevices;

  @NonNull
  public final RecyclerView recyclerPairedDevices;

  @NonNull
  public final LinearLayout scanningMessage;

  @NonNull
  public final TextView textView22;

  private ActivityDeviceListBinding(@NonNull LinearLayout rootView, @NonNull Button buttonScan,
      @NonNull TextView newDevicesTitle, @NonNull TextView pairedDevicesTitle,
      @NonNull ProgressBar progressBar4, @NonNull RecyclerView recyclerNewDevices,
      @NonNull RecyclerView recyclerPairedDevices, @NonNull LinearLayout scanningMessage,
      @NonNull TextView textView22) {
    this.rootView = rootView;
    this.buttonScan = buttonScan;
    this.newDevicesTitle = newDevicesTitle;
    this.pairedDevicesTitle = pairedDevicesTitle;
    this.progressBar4 = progressBar4;
    this.recyclerNewDevices = recyclerNewDevices;
    this.recyclerPairedDevices = recyclerPairedDevices;
    this.scanningMessage = scanningMessage;
    this.textView22 = textView22;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeviceListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeviceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_device_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeviceListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_scan;
      Button buttonScan = ViewBindings.findChildViewById(rootView, id);
      if (buttonScan == null) {
        break missingId;
      }

      id = R.id.new_devices_title;
      TextView newDevicesTitle = ViewBindings.findChildViewById(rootView, id);
      if (newDevicesTitle == null) {
        break missingId;
      }

      id = R.id.paired_devices_title;
      TextView pairedDevicesTitle = ViewBindings.findChildViewById(rootView, id);
      if (pairedDevicesTitle == null) {
        break missingId;
      }

      id = R.id.progressBar4;
      ProgressBar progressBar4 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar4 == null) {
        break missingId;
      }

      id = R.id.recycler_new_devices;
      RecyclerView recyclerNewDevices = ViewBindings.findChildViewById(rootView, id);
      if (recyclerNewDevices == null) {
        break missingId;
      }

      id = R.id.recycler_paired_devices;
      RecyclerView recyclerPairedDevices = ViewBindings.findChildViewById(rootView, id);
      if (recyclerPairedDevices == null) {
        break missingId;
      }

      id = R.id.scanning_message;
      LinearLayout scanningMessage = ViewBindings.findChildViewById(rootView, id);
      if (scanningMessage == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      return new ActivityDeviceListBinding((LinearLayout) rootView, buttonScan, newDevicesTitle,
          pairedDevicesTitle, progressBar4, recyclerNewDevices, recyclerPairedDevices,
          scanningMessage, textView22);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
