// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class ViewPermissionsExplanationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnPermissions;

  @NonNull
  public final AppCompatImageView imageView10;

  @NonNull
  public final ImageView imageView11;

  @NonNull
  public final AppCompatImageView imageView12;

  @NonNull
  public final LinearLayout notAskableDescription;

  @NonNull
  public final RelativeLayout permissionACCESSCOARSELOCATION;

  @NonNull
  public final RelativeLayout permissionWRITEEXTERNALSTORAGE;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView22;

  private ViewPermissionsExplanationBinding(@NonNull ScrollView rootView,
      @NonNull Button btnPermissions, @NonNull AppCompatImageView imageView10,
      @NonNull ImageView imageView11, @NonNull AppCompatImageView imageView12,
      @NonNull LinearLayout notAskableDescription,
      @NonNull RelativeLayout permissionACCESSCOARSELOCATION,
      @NonNull RelativeLayout permissionWRITEEXTERNALSTORAGE, @NonNull TextView textView12,
      @NonNull TextView textView15, @NonNull TextView textView16, @NonNull TextView textView17,
      @NonNull TextView textView18, @NonNull TextView textView19, @NonNull TextView textView22) {
    this.rootView = rootView;
    this.btnPermissions = btnPermissions;
    this.imageView10 = imageView10;
    this.imageView11 = imageView11;
    this.imageView12 = imageView12;
    this.notAskableDescription = notAskableDescription;
    this.permissionACCESSCOARSELOCATION = permissionACCESSCOARSELOCATION;
    this.permissionWRITEEXTERNALSTORAGE = permissionWRITEEXTERNALSTORAGE;
    this.textView12 = textView12;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.textView17 = textView17;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.textView22 = textView22;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewPermissionsExplanationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewPermissionsExplanationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_permissions_explanation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewPermissionsExplanationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_permissions;
      Button btnPermissions = ViewBindings.findChildViewById(rootView, id);
      if (btnPermissions == null) {
        break missingId;
      }

      id = R.id.imageView10;
      AppCompatImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageView imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.imageView12;
      AppCompatImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.not_askable_description;
      LinearLayout notAskableDescription = ViewBindings.findChildViewById(rootView, id);
      if (notAskableDescription == null) {
        break missingId;
      }

      id = R.id.permission_ACCESS_COARSE_LOCATION;
      RelativeLayout permissionACCESSCOARSELOCATION = ViewBindings.findChildViewById(rootView, id);
      if (permissionACCESSCOARSELOCATION == null) {
        break missingId;
      }

      id = R.id.permission_WRITE_EXTERNAL_STORAGE;
      RelativeLayout permissionWRITEEXTERNALSTORAGE = ViewBindings.findChildViewById(rootView, id);
      if (permissionWRITEEXTERNALSTORAGE == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      return new ViewPermissionsExplanationBinding((ScrollView) rootView, btnPermissions,
          imageView10, imageView11, imageView12, notAskableDescription,
          permissionACCESSCOARSELOCATION, permissionWRITEEXTERNALSTORAGE, textView12, textView15,
          textView16, textView17, textView18, textView19, textView22);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
