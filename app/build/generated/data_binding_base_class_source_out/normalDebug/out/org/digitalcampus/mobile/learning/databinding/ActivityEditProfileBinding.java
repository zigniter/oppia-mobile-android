// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hbb20.CountryCodePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;
import org.digitalcampus.oppia.utils.ui.fields.ValidableTextInputLayout;

public final class ActivityEditProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnSaveProfile;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final LinearLayout customFieldsContainer;

  @NonNull
  public final ValidableTextInputLayout fieldEmail;

  @NonNull
  public final ValidableTextInputLayout fieldFirstname;

  @NonNull
  public final ValidableTextInputLayout fieldJobtitle;

  @NonNull
  public final ValidableTextInputLayout fieldLastname;

  @NonNull
  public final ValidableTextInputLayout fieldOrganisation;

  @NonNull
  public final ValidableTextInputLayout fieldPhoneno;

  @NonNull
  public final LinearLayout fieldPhonenoContainer;

  @NonNull
  public final EditText registerFormPhonenoEdittext;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityEditProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnSaveProfile, @NonNull CountryCodePicker ccp,
      @NonNull LinearLayout customFieldsContainer, @NonNull ValidableTextInputLayout fieldEmail,
      @NonNull ValidableTextInputLayout fieldFirstname,
      @NonNull ValidableTextInputLayout fieldJobtitle,
      @NonNull ValidableTextInputLayout fieldLastname,
      @NonNull ValidableTextInputLayout fieldOrganisation,
      @NonNull ValidableTextInputLayout fieldPhoneno, @NonNull LinearLayout fieldPhonenoContainer,
      @NonNull EditText registerFormPhonenoEdittext, @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.btnSaveProfile = btnSaveProfile;
    this.ccp = ccp;
    this.customFieldsContainer = customFieldsContainer;
    this.fieldEmail = fieldEmail;
    this.fieldFirstname = fieldFirstname;
    this.fieldJobtitle = fieldJobtitle;
    this.fieldLastname = fieldLastname;
    this.fieldOrganisation = fieldOrganisation;
    this.fieldPhoneno = fieldPhoneno;
    this.fieldPhonenoContainer = fieldPhonenoContainer;
    this.registerFormPhonenoEdittext = registerFormPhonenoEdittext;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save_profile;
      Button btnSaveProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveProfile == null) {
        break missingId;
      }

      id = R.id.ccp;
      CountryCodePicker ccp = ViewBindings.findChildViewById(rootView, id);
      if (ccp == null) {
        break missingId;
      }

      id = R.id.custom_fields_container;
      LinearLayout customFieldsContainer = ViewBindings.findChildViewById(rootView, id);
      if (customFieldsContainer == null) {
        break missingId;
      }

      id = R.id.field_email;
      ValidableTextInputLayout fieldEmail = ViewBindings.findChildViewById(rootView, id);
      if (fieldEmail == null) {
        break missingId;
      }

      id = R.id.field_firstname;
      ValidableTextInputLayout fieldFirstname = ViewBindings.findChildViewById(rootView, id);
      if (fieldFirstname == null) {
        break missingId;
      }

      id = R.id.field_jobtitle;
      ValidableTextInputLayout fieldJobtitle = ViewBindings.findChildViewById(rootView, id);
      if (fieldJobtitle == null) {
        break missingId;
      }

      id = R.id.field_lastname;
      ValidableTextInputLayout fieldLastname = ViewBindings.findChildViewById(rootView, id);
      if (fieldLastname == null) {
        break missingId;
      }

      id = R.id.field_organisation;
      ValidableTextInputLayout fieldOrganisation = ViewBindings.findChildViewById(rootView, id);
      if (fieldOrganisation == null) {
        break missingId;
      }

      id = R.id.field_phoneno;
      ValidableTextInputLayout fieldPhoneno = ViewBindings.findChildViewById(rootView, id);
      if (fieldPhoneno == null) {
        break missingId;
      }

      id = R.id.field_phoneno_container;
      LinearLayout fieldPhonenoContainer = ViewBindings.findChildViewById(rootView, id);
      if (fieldPhonenoContainer == null) {
        break missingId;
      }

      id = R.id.register_form_phoneno_edittext;
      EditText registerFormPhonenoEdittext = ViewBindings.findChildViewById(rootView, id);
      if (registerFormPhonenoEdittext == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityEditProfileBinding((RelativeLayout) rootView, btnSaveProfile, ccp,
          customFieldsContainer, fieldEmail, fieldFirstname, fieldJobtitle, fieldLastname,
          fieldOrganisation, fieldPhoneno, fieldPhonenoContainer, registerFormPhonenoEdittext,
          binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
