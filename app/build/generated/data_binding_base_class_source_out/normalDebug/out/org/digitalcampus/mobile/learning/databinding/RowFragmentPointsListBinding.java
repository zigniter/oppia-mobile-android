// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class RowFragmentPointsListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView pointsDate;

  @NonNull
  public final TextView pointsDescription;

  @NonNull
  public final TextView pointsPoints;

  @NonNull
  public final LinearLayout pointsRow;

  @NonNull
  public final TextView pointsTime;

  private RowFragmentPointsListBinding(@NonNull LinearLayout rootView, @NonNull TextView pointsDate,
      @NonNull TextView pointsDescription, @NonNull TextView pointsPoints,
      @NonNull LinearLayout pointsRow, @NonNull TextView pointsTime) {
    this.rootView = rootView;
    this.pointsDate = pointsDate;
    this.pointsDescription = pointsDescription;
    this.pointsPoints = pointsPoints;
    this.pointsRow = pointsRow;
    this.pointsTime = pointsTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowFragmentPointsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowFragmentPointsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_fragment_points_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowFragmentPointsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.points_date;
      TextView pointsDate = ViewBindings.findChildViewById(rootView, id);
      if (pointsDate == null) {
        break missingId;
      }

      id = R.id.points_description;
      TextView pointsDescription = ViewBindings.findChildViewById(rootView, id);
      if (pointsDescription == null) {
        break missingId;
      }

      id = R.id.points_points;
      TextView pointsPoints = ViewBindings.findChildViewById(rootView, id);
      if (pointsPoints == null) {
        break missingId;
      }

      LinearLayout pointsRow = (LinearLayout) rootView;

      id = R.id.points_time;
      TextView pointsTime = ViewBindings.findChildViewById(rootView, id);
      if (pointsTime == null) {
        break missingId;
      }

      return new RowFragmentPointsListBinding((LinearLayout) rootView, pointsDate,
          pointsDescription, pointsPoints, pointsRow, pointsTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
