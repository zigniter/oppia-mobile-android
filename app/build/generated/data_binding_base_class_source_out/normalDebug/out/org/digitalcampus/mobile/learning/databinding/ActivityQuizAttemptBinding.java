// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class ActivityQuizAttemptBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout actionBarSubtitle;

  @NonNull
  public final TextView attemptDate;

  @NonNull
  public final TextView attemptTimetaken;

  @NonNull
  public final TextView courseTitle;

  @NonNull
  public final AppCompatImageView icDate;

  @NonNull
  public final AppCompatImageView icTime;

  @NonNull
  public final TextView quizTitle;

  @NonNull
  public final RecyclerView recyclerQuizResultsFeedback;

  @NonNull
  public final Button retakeQuizBtn;

  @NonNull
  public final TextView score;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityQuizAttemptBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout actionBarSubtitle, @NonNull TextView attemptDate,
      @NonNull TextView attemptTimetaken, @NonNull TextView courseTitle,
      @NonNull AppCompatImageView icDate, @NonNull AppCompatImageView icTime,
      @NonNull TextView quizTitle, @NonNull RecyclerView recyclerQuizResultsFeedback,
      @NonNull Button retakeQuizBtn, @NonNull TextView score, @NonNull NestedScrollView scrollView,
      @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.actionBarSubtitle = actionBarSubtitle;
    this.attemptDate = attemptDate;
    this.attemptTimetaken = attemptTimetaken;
    this.courseTitle = courseTitle;
    this.icDate = icDate;
    this.icTime = icTime;
    this.quizTitle = quizTitle;
    this.recyclerQuizResultsFeedback = recyclerQuizResultsFeedback;
    this.retakeQuizBtn = retakeQuizBtn;
    this.score = score;
    this.scrollView = scrollView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuizAttemptBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuizAttemptBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_quiz_attempt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuizAttemptBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar_subtitle;
      LinearLayout actionBarSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (actionBarSubtitle == null) {
        break missingId;
      }

      id = R.id.attempt_date;
      TextView attemptDate = ViewBindings.findChildViewById(rootView, id);
      if (attemptDate == null) {
        break missingId;
      }

      id = R.id.attempt_timetaken;
      TextView attemptTimetaken = ViewBindings.findChildViewById(rootView, id);
      if (attemptTimetaken == null) {
        break missingId;
      }

      id = R.id.course_title;
      TextView courseTitle = ViewBindings.findChildViewById(rootView, id);
      if (courseTitle == null) {
        break missingId;
      }

      id = R.id.ic_date;
      AppCompatImageView icDate = ViewBindings.findChildViewById(rootView, id);
      if (icDate == null) {
        break missingId;
      }

      id = R.id.ic_time;
      AppCompatImageView icTime = ViewBindings.findChildViewById(rootView, id);
      if (icTime == null) {
        break missingId;
      }

      id = R.id.quiz_title;
      TextView quizTitle = ViewBindings.findChildViewById(rootView, id);
      if (quizTitle == null) {
        break missingId;
      }

      id = R.id.recycler_quiz_results_feedback;
      RecyclerView recyclerQuizResultsFeedback = ViewBindings.findChildViewById(rootView, id);
      if (recyclerQuizResultsFeedback == null) {
        break missingId;
      }

      id = R.id.retake_quiz_btn;
      Button retakeQuizBtn = ViewBindings.findChildViewById(rootView, id);
      if (retakeQuizBtn == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityQuizAttemptBinding((LinearLayout) rootView, actionBarSubtitle, attemptDate,
          attemptTimetaken, courseTitle, icDate, icTime, quizTitle, recyclerQuizResultsFeedback,
          retakeQuizBtn, score, scrollView, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
