// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class FragmentBadgesBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final LinearLayout errorState;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView imageView11;

  @NonNull
  public final LinearLayout loadingBadges;

  @NonNull
  public final FrameLayout permissionsExplanation;

  @NonNull
  public final ProgressBar progressBar2;

  @NonNull
  public final RecyclerView recyclerBadges;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  private FragmentBadgesBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout emptyState,
      @NonNull LinearLayout errorState, @NonNull ImageView imageView10,
      @NonNull ImageView imageView11, @NonNull LinearLayout loadingBadges,
      @NonNull FrameLayout permissionsExplanation, @NonNull ProgressBar progressBar2,
      @NonNull RecyclerView recyclerBadges, @NonNull TextView textView11,
      @NonNull TextView textView12) {
    this.rootView = rootView;
    this.emptyState = emptyState;
    this.errorState = errorState;
    this.imageView10 = imageView10;
    this.imageView11 = imageView11;
    this.loadingBadges = loadingBadges;
    this.permissionsExplanation = permissionsExplanation;
    this.progressBar2 = progressBar2;
    this.recyclerBadges = recyclerBadges;
    this.textView11 = textView11;
    this.textView12 = textView12;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBadgesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBadgesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_badges, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBadgesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_state;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.error_state;
      LinearLayout errorState = ViewBindings.findChildViewById(rootView, id);
      if (errorState == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageView imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.loading_badges;
      LinearLayout loadingBadges = ViewBindings.findChildViewById(rootView, id);
      if (loadingBadges == null) {
        break missingId;
      }

      id = R.id.permissions_explanation;
      FrameLayout permissionsExplanation = ViewBindings.findChildViewById(rootView, id);
      if (permissionsExplanation == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      id = R.id.recycler_badges;
      RecyclerView recyclerBadges = ViewBindings.findChildViewById(rootView, id);
      if (recyclerBadges == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      return new FragmentBadgesBinding((FrameLayout) rootView, emptyState, errorState, imageView10,
          imageView11, loadingBadges, permissionsExplanation, progressBar2, recyclerBadges,
          textView11, textView12);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
