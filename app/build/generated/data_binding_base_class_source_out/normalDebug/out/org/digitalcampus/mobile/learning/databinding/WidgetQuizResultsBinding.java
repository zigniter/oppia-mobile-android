// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class WidgetQuizResultsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView infoNumAttempts;

  @NonNull
  public final TextView infoThreshold;

  @NonNull
  public final TextView quizAvailabilityMessage;

  @NonNull
  public final Button quizExitButton;

  @NonNull
  public final TextView quizResultsBaseline;

  @NonNull
  public final LinearLayout quizResultsBottomControlBar;

  @NonNull
  public final Button quizResultsButton;

  @NonNull
  public final TextView quizResultsGeneralFeedback;

  @NonNull
  public final TextView quizResultsScore;

  @NonNull
  public final LinearLayout quizResultsTopControlBar;

  @NonNull
  public final LinearLayout quizStats;

  @NonNull
  public final RecyclerView recyclerQuizResultsFeedback;

  @NonNull
  public final RelativeLayout widgetQuizResults;

  private WidgetQuizResultsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView infoNumAttempts, @NonNull TextView infoThreshold,
      @NonNull TextView quizAvailabilityMessage, @NonNull Button quizExitButton,
      @NonNull TextView quizResultsBaseline, @NonNull LinearLayout quizResultsBottomControlBar,
      @NonNull Button quizResultsButton, @NonNull TextView quizResultsGeneralFeedback,
      @NonNull TextView quizResultsScore, @NonNull LinearLayout quizResultsTopControlBar,
      @NonNull LinearLayout quizStats, @NonNull RecyclerView recyclerQuizResultsFeedback,
      @NonNull RelativeLayout widgetQuizResults) {
    this.rootView = rootView;
    this.infoNumAttempts = infoNumAttempts;
    this.infoThreshold = infoThreshold;
    this.quizAvailabilityMessage = quizAvailabilityMessage;
    this.quizExitButton = quizExitButton;
    this.quizResultsBaseline = quizResultsBaseline;
    this.quizResultsBottomControlBar = quizResultsBottomControlBar;
    this.quizResultsButton = quizResultsButton;
    this.quizResultsGeneralFeedback = quizResultsGeneralFeedback;
    this.quizResultsScore = quizResultsScore;
    this.quizResultsTopControlBar = quizResultsTopControlBar;
    this.quizStats = quizStats;
    this.recyclerQuizResultsFeedback = recyclerQuizResultsFeedback;
    this.widgetQuizResults = widgetQuizResults;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetQuizResultsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetQuizResultsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_quiz_results, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetQuizResultsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.info_num_attempts;
      TextView infoNumAttempts = ViewBindings.findChildViewById(rootView, id);
      if (infoNumAttempts == null) {
        break missingId;
      }

      id = R.id.info_threshold;
      TextView infoThreshold = ViewBindings.findChildViewById(rootView, id);
      if (infoThreshold == null) {
        break missingId;
      }

      id = R.id.quiz_availability_message;
      TextView quizAvailabilityMessage = ViewBindings.findChildViewById(rootView, id);
      if (quizAvailabilityMessage == null) {
        break missingId;
      }

      id = R.id.quiz_exit_button;
      Button quizExitButton = ViewBindings.findChildViewById(rootView, id);
      if (quizExitButton == null) {
        break missingId;
      }

      id = R.id.quiz_results_baseline;
      TextView quizResultsBaseline = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsBaseline == null) {
        break missingId;
      }

      id = R.id.quiz_results_bottom_control_bar;
      LinearLayout quizResultsBottomControlBar = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsBottomControlBar == null) {
        break missingId;
      }

      id = R.id.quiz_results_button;
      Button quizResultsButton = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsButton == null) {
        break missingId;
      }

      id = R.id.quiz_results_general_feedback;
      TextView quizResultsGeneralFeedback = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsGeneralFeedback == null) {
        break missingId;
      }

      id = R.id.quiz_results_score;
      TextView quizResultsScore = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsScore == null) {
        break missingId;
      }

      id = R.id.quiz_results_top_control_bar;
      LinearLayout quizResultsTopControlBar = ViewBindings.findChildViewById(rootView, id);
      if (quizResultsTopControlBar == null) {
        break missingId;
      }

      id = R.id.quiz_stats;
      LinearLayout quizStats = ViewBindings.findChildViewById(rootView, id);
      if (quizStats == null) {
        break missingId;
      }

      id = R.id.recycler_quiz_results_feedback;
      RecyclerView recyclerQuizResultsFeedback = ViewBindings.findChildViewById(rootView, id);
      if (recyclerQuizResultsFeedback == null) {
        break missingId;
      }

      RelativeLayout widgetQuizResults = (RelativeLayout) rootView;

      return new WidgetQuizResultsBinding((RelativeLayout) rootView, infoNumAttempts, infoThreshold,
          quizAvailabilityMessage, quizExitButton, quizResultsBaseline, quizResultsBottomControlBar,
          quizResultsButton, quizResultsGeneralFeedback, quizResultsScore, quizResultsTopControlBar,
          quizStats, recyclerQuizResultsFeedback, widgetQuizResults);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
