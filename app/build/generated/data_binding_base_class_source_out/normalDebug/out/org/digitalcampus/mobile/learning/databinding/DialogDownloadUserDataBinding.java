// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class DialogDownloadUserDataBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView downloadDataBadges;

  @NonNull
  public final AppCompatTextView downloadDataCourse;

  @NonNull
  public final LinearLayout downloadDataList;

  @NonNull
  public final AppCompatTextView downloadDataPoints;

  @NonNull
  public final AppCompatTextView downloadDataProfile;

  @NonNull
  public final AppCompatTextView downloadDataQuizzes;

  @NonNull
  public final LinearLayout loadingDownload;

  @NonNull
  public final FrameLayout permissionsExplanation;

  @NonNull
  public final ProgressBar progressBar2;

  @NonNull
  public final TextView textView;

  private DialogDownloadUserDataBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView downloadDataBadges, @NonNull AppCompatTextView downloadDataCourse,
      @NonNull LinearLayout downloadDataList, @NonNull AppCompatTextView downloadDataPoints,
      @NonNull AppCompatTextView downloadDataProfile,
      @NonNull AppCompatTextView downloadDataQuizzes, @NonNull LinearLayout loadingDownload,
      @NonNull FrameLayout permissionsExplanation, @NonNull ProgressBar progressBar2,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.downloadDataBadges = downloadDataBadges;
    this.downloadDataCourse = downloadDataCourse;
    this.downloadDataList = downloadDataList;
    this.downloadDataPoints = downloadDataPoints;
    this.downloadDataProfile = downloadDataProfile;
    this.downloadDataQuizzes = downloadDataQuizzes;
    this.loadingDownload = loadingDownload;
    this.permissionsExplanation = permissionsExplanation;
    this.progressBar2 = progressBar2;
    this.textView = textView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDownloadUserDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDownloadUserDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_download_user_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDownloadUserDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.download_data_badges;
      AppCompatTextView downloadDataBadges = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataBadges == null) {
        break missingId;
      }

      id = R.id.download_data_course;
      AppCompatTextView downloadDataCourse = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataCourse == null) {
        break missingId;
      }

      id = R.id.download_data_list;
      LinearLayout downloadDataList = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataList == null) {
        break missingId;
      }

      id = R.id.download_data_points;
      AppCompatTextView downloadDataPoints = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataPoints == null) {
        break missingId;
      }

      id = R.id.download_data_profile;
      AppCompatTextView downloadDataProfile = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataProfile == null) {
        break missingId;
      }

      id = R.id.download_data_quizzes;
      AppCompatTextView downloadDataQuizzes = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataQuizzes == null) {
        break missingId;
      }

      id = R.id.loading_download;
      LinearLayout loadingDownload = ViewBindings.findChildViewById(rootView, id);
      if (loadingDownload == null) {
        break missingId;
      }

      id = R.id.permissions_explanation;
      FrameLayout permissionsExplanation = ViewBindings.findChildViewById(rootView, id);
      if (permissionsExplanation == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new DialogDownloadUserDataBinding((LinearLayout) rootView, downloadDataBadges,
          downloadDataCourse, downloadDataList, downloadDataPoints, downloadDataProfile,
          downloadDataQuizzes, loadingDownload, permissionsExplanation, progressBar2, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
