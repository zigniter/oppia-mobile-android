// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class RowTransferableFileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout courseRow;

  @NonNull
  public final ImageButton downloadCourseBtn;

  @NonNull
  public final AppCompatImageView elemIcon;

  @NonNull
  public final TextView fileAside;

  @NonNull
  public final TextView fileSubtitle;

  @NonNull
  public final TextView fileTitle;

  private RowTransferableFileBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout courseRow, @NonNull ImageButton downloadCourseBtn,
      @NonNull AppCompatImageView elemIcon, @NonNull TextView fileAside,
      @NonNull TextView fileSubtitle, @NonNull TextView fileTitle) {
    this.rootView = rootView;
    this.courseRow = courseRow;
    this.downloadCourseBtn = downloadCourseBtn;
    this.elemIcon = elemIcon;
    this.fileAside = fileAside;
    this.fileSubtitle = fileSubtitle;
    this.fileTitle = fileTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowTransferableFileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowTransferableFileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_transferable_file, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowTransferableFileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout courseRow = (RelativeLayout) rootView;

      id = R.id.download_course_btn;
      ImageButton downloadCourseBtn = ViewBindings.findChildViewById(rootView, id);
      if (downloadCourseBtn == null) {
        break missingId;
      }

      id = R.id.elem_icon;
      AppCompatImageView elemIcon = ViewBindings.findChildViewById(rootView, id);
      if (elemIcon == null) {
        break missingId;
      }

      id = R.id.file_aside;
      TextView fileAside = ViewBindings.findChildViewById(rootView, id);
      if (fileAside == null) {
        break missingId;
      }

      id = R.id.file_subtitle;
      TextView fileSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (fileSubtitle == null) {
        break missingId;
      }

      id = R.id.file_title;
      TextView fileTitle = ViewBindings.findChildViewById(rootView, id);
      if (fileTitle == null) {
        break missingId;
      }

      return new RowTransferableFileBinding((RelativeLayout) rootView, courseRow, downloadCourseBtn,
          elemIcon, fileAside, fileSubtitle, fileTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
