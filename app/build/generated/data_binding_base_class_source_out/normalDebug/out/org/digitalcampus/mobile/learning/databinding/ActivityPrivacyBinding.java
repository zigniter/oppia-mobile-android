// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class ActivityPrivacyBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout aboutPrivacyPolicy;

  @NonNull
  public final RelativeLayout aboutPrivacyTerms;

  @NonNull
  public final RelativeLayout aboutPrivacyWhat;

  @NonNull
  public final RelativeLayout aboutPrivacyWhy;

  @NonNull
  public final CheckBox analyticsCheckbox;

  @NonNull
  public final Button btnDeleteAccount;

  @NonNull
  public final Button btnDownloadData;

  @NonNull
  public final CheckBox bugreportCheckbox;

  @NonNull
  public final RelativeLayout deleteDataSection;

  @NonNull
  public final TextView deleteDataTitle;

  @NonNull
  public final TextView downloadDataTitle;

  @NonNull
  public final LinearLayout llCardLayoutPhone;

  @NonNull
  public final LinearLayout llCardLayoutPhone2;

  @NonNull
  public final View manageDataSeparator;

  @NonNull
  public final LinearLayout privacyUserSection;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityPrivacyBinding(@NonNull ScrollView rootView,
      @NonNull RelativeLayout aboutPrivacyPolicy, @NonNull RelativeLayout aboutPrivacyTerms,
      @NonNull RelativeLayout aboutPrivacyWhat, @NonNull RelativeLayout aboutPrivacyWhy,
      @NonNull CheckBox analyticsCheckbox, @NonNull Button btnDeleteAccount,
      @NonNull Button btnDownloadData, @NonNull CheckBox bugreportCheckbox,
      @NonNull RelativeLayout deleteDataSection, @NonNull TextView deleteDataTitle,
      @NonNull TextView downloadDataTitle, @NonNull LinearLayout llCardLayoutPhone,
      @NonNull LinearLayout llCardLayoutPhone2, @NonNull View manageDataSeparator,
      @NonNull LinearLayout privacyUserSection, @NonNull TextView textView13,
      @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.aboutPrivacyPolicy = aboutPrivacyPolicy;
    this.aboutPrivacyTerms = aboutPrivacyTerms;
    this.aboutPrivacyWhat = aboutPrivacyWhat;
    this.aboutPrivacyWhy = aboutPrivacyWhy;
    this.analyticsCheckbox = analyticsCheckbox;
    this.btnDeleteAccount = btnDeleteAccount;
    this.btnDownloadData = btnDownloadData;
    this.bugreportCheckbox = bugreportCheckbox;
    this.deleteDataSection = deleteDataSection;
    this.deleteDataTitle = deleteDataTitle;
    this.downloadDataTitle = downloadDataTitle;
    this.llCardLayoutPhone = llCardLayoutPhone;
    this.llCardLayoutPhone2 = llCardLayoutPhone2;
    this.manageDataSeparator = manageDataSeparator;
    this.privacyUserSection = privacyUserSection;
    this.textView13 = textView13;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPrivacyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPrivacyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_privacy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPrivacyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_privacy_policy;
      RelativeLayout aboutPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (aboutPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.about_privacy_terms;
      RelativeLayout aboutPrivacyTerms = ViewBindings.findChildViewById(rootView, id);
      if (aboutPrivacyTerms == null) {
        break missingId;
      }

      id = R.id.about_privacy_what;
      RelativeLayout aboutPrivacyWhat = ViewBindings.findChildViewById(rootView, id);
      if (aboutPrivacyWhat == null) {
        break missingId;
      }

      id = R.id.about_privacy_why;
      RelativeLayout aboutPrivacyWhy = ViewBindings.findChildViewById(rootView, id);
      if (aboutPrivacyWhy == null) {
        break missingId;
      }

      id = R.id.analytics_checkbox;
      CheckBox analyticsCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (analyticsCheckbox == null) {
        break missingId;
      }

      id = R.id.btn_delete_account;
      Button btnDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteAccount == null) {
        break missingId;
      }

      id = R.id.btn_download_data;
      Button btnDownloadData = ViewBindings.findChildViewById(rootView, id);
      if (btnDownloadData == null) {
        break missingId;
      }

      id = R.id.bugreport_checkbox;
      CheckBox bugreportCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (bugreportCheckbox == null) {
        break missingId;
      }

      id = R.id.delete_data_section;
      RelativeLayout deleteDataSection = ViewBindings.findChildViewById(rootView, id);
      if (deleteDataSection == null) {
        break missingId;
      }

      id = R.id.delete_data_title;
      TextView deleteDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (deleteDataTitle == null) {
        break missingId;
      }

      id = R.id.download_data_title;
      TextView downloadDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (downloadDataTitle == null) {
        break missingId;
      }

      id = R.id.ll_card_layout_phone;
      LinearLayout llCardLayoutPhone = ViewBindings.findChildViewById(rootView, id);
      if (llCardLayoutPhone == null) {
        break missingId;
      }

      id = R.id.ll_card_layout_phone2;
      LinearLayout llCardLayoutPhone2 = ViewBindings.findChildViewById(rootView, id);
      if (llCardLayoutPhone2 == null) {
        break missingId;
      }

      id = R.id.manage_data_separator;
      View manageDataSeparator = ViewBindings.findChildViewById(rootView, id);
      if (manageDataSeparator == null) {
        break missingId;
      }

      id = R.id.privacy_user_section;
      LinearLayout privacyUserSection = ViewBindings.findChildViewById(rootView, id);
      if (privacyUserSection == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityPrivacyBinding((ScrollView) rootView, aboutPrivacyPolicy,
          aboutPrivacyTerms, aboutPrivacyWhat, aboutPrivacyWhy, analyticsCheckbox, btnDeleteAccount,
          btnDownloadData, bugreportCheckbox, deleteDataSection, deleteDataTitle, downloadDataTitle,
          llCardLayoutPhone, llCardLayoutPhone2, manageDataSeparator, privacyUserSection,
          textView13, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
