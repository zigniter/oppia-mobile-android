// Generated by view binder compiler. Do not edit!
package org.digitalcampus.mobile.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.digitalcampus.mobile.learning.R;

public final class RowLeaderboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView leaderboardFullname;

  @NonNull
  public final TextView leaderboardPoints;

  @NonNull
  public final TextView leaderboardPosition;

  @NonNull
  public final TextView leaderboardUsername;

  @NonNull
  public final CardView userCard;

  private RowLeaderboardBinding(@NonNull LinearLayout rootView,
      @NonNull TextView leaderboardFullname, @NonNull TextView leaderboardPoints,
      @NonNull TextView leaderboardPosition, @NonNull TextView leaderboardUsername,
      @NonNull CardView userCard) {
    this.rootView = rootView;
    this.leaderboardFullname = leaderboardFullname;
    this.leaderboardPoints = leaderboardPoints;
    this.leaderboardPosition = leaderboardPosition;
    this.leaderboardUsername = leaderboardUsername;
    this.userCard = userCard;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowLeaderboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowLeaderboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_leaderboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowLeaderboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.leaderboard_fullname;
      TextView leaderboardFullname = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardFullname == null) {
        break missingId;
      }

      id = R.id.leaderboard_points;
      TextView leaderboardPoints = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardPoints == null) {
        break missingId;
      }

      id = R.id.leaderboard_position;
      TextView leaderboardPosition = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardPosition == null) {
        break missingId;
      }

      id = R.id.leaderboard_username;
      TextView leaderboardUsername = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardUsername == null) {
        break missingId;
      }

      id = R.id.user_card;
      CardView userCard = ViewBindings.findChildViewById(rootView, id);
      if (userCard == null) {
        break missingId;
      }

      return new RowLeaderboardBinding((LinearLayout) rootView, leaderboardFullname,
          leaderboardPoints, leaderboardPosition, leaderboardUsername, userCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
